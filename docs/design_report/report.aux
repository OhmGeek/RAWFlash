\relax 
\bibstyle{agsm}
\citation{AllAboutTheFormat}
\@writefile{toc}{\contentsline {paragraph}{Context/Background}{1}}
\@writefile{toc}{\contentsline {paragraph}{Aims}{1}}
\@writefile{toc}{\contentsline {paragraph}{Method}{1}}
\@writefile{toc}{\contentsline {paragraph}{Proposed Solution}{1}}
\@writefile{toc}{\contentsline {section}{\numberline {I}Introduction}{1}}
\@writefile{toc}{\contentsline {subsection}{\numberline {A}Project Aim}{2}}
\@writefile{toc}{\contentsline {subsection}{\numberline {B}Deliverables}{2}}
\@writefile{toc}{\contentsline {paragraph}{Minimum Objectives}{2}}
\@writefile{toc}{\contentsline {paragraph}{Intermediate Objectives}{2}}
\@writefile{toc}{\contentsline {paragraph}{Advanced Objectives}{2}}
\@writefile{toc}{\contentsline {section}{\numberline {II}Design}{2}}
\@writefile{lot}{\contentsline {table}{\numberline {1}{\ignorespaces Functional and Non-Functional Requirements}}{3}}
\newlabel{RequirementsTable}{{1}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {A}Requirements}{3}}
\@writefile{toc}{\contentsline {subsection}{\numberline {B}Proposed Extensions}{3}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {B.1}Quality of Service Improvements}{3}}
\@writefile{toc}{\contentsline {paragraph}{Client Side Preview Rendering}{3}}
\citation{ColourAttenuationPriorAlg}
\citation{XMLHttpRequestMozilla}
\citation{WebSocketProtocol}
\@writefile{toc}{\contentsline {paragraph}{Message Queue Implementation}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {B.2}Additional Features}{4}}
\@writefile{toc}{\contentsline {paragraph}{Image Haze Removal}{4}}
\@writefile{toc}{\contentsline {subsection}{\numberline {C}Architecture}{4}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {C.1}Client Interface to Render Server Communication}{4}}
\@writefile{toc}{\contentsline {paragraph}{Representational State Transfer (REST)}{4}}
\@writefile{lof}{\contentsline {figure}{\numberline {1}{\ignorespaces The architecture of the system. The user makes a request to the web server (reverse proxy). They fetch the static web application, and this sends requests (via AJAX) to the Web Services server behind the proxy, dealing with user login, file upload, and image management. When the image editor is loaded, the image information is fetched, and loaded in. Regularly, requests are made via Socket.io to the render dispatcher to render the image, and this is passed to the message queue for later computation (when the render servers are available). One of many pool of render servers then fetches this from the message queue, processes the image and the associated settings, and returns a base64 encoded preview, along with other information. This is then passed back to the queue, to the render dispatcher, and finally via Socket.io to the user who requested the preview.}}{5}}
\newlabel{ArchitectureDiagram}{{1}{5}}
\@writefile{toc}{\contentsline {paragraph}{Web Socket}{5}}
\@writefile{toc}{\contentsline {paragraph}{Socket.io}{5}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {C.2}Render Server}{5}}
\@writefile{toc}{\contentsline {paragraph}{dcraw}{5}}
\citation{DcrawWebsite}
\citation{DcrawManpage}
\@writefile{toc}{\contentsline {paragraph}{libraw}{6}}
\@writefile{toc}{\contentsline {paragraph}{ImageMagick}{6}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {C.3}Client-side Interface}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {D}User Interface}{6}}
\newlabel{UserInterface}{{D}{6}}
\@writefile{toc}{\contentsline {subsection}{\numberline {E}Implementation Information}{6}}
\citation{ComparisonOfDatabaseBackends}
\@writefile{toc}{\contentsline {paragraph}{Client-side Interface}{7}}
\@writefile{toc}{\contentsline {paragraph}{User account based RAW file management}{7}}
\@writefile{toc}{\contentsline {paragraph}{Render Server}{8}}
\@writefile{toc}{\contentsline {paragraph}{Account Management Server}{8}}
\@writefile{toc}{\contentsline {paragraph}{File Storage Server}{8}}
\@writefile{toc}{\contentsline {paragraph}{Distributed System Management}{8}}
\citation{DockerWhyItsUseful}
\@writefile{lof}{\contentsline {figure}{\numberline {2}{\ignorespaces A diagram showing the structure of the render server components. The server will fetch from the message queue as JSON object containing the URL to the RAW file, and the settings to render it with. This will be passed to the file manager, which first checks to see whether the file is stored within the local cache, and if not downloads the file from the file storage server, and stores it in the local cache. From here, the Operation Manager takes over, by using the JSON string to execute the appropriate managers. First, the Dcraw Manager takes the RAW file, via the JDCRAW library, and converts the RAW file to an uncompressed TIFF. The location of this TIFF is added to the JSON string, and this is passed back up to the Operation Manager. Then, the Adams Processor (which contains all the custom written Java code for image processing) does the rest of the image processing, and finally writes a TIFF file to the local cache, which then has the URL stored within JSON data structure. Finally, the TIFF image is loaded, converted to base64, and passed back to the message queue along with other image information. }}{9}}
\newlabel{RenderServerDiagram}{{2}{9}}
\@writefile{toc}{\contentsline {subsection}{\numberline {F}Evaluation}{10}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {F.1}System-based Metrics}{10}}
\@writefile{toc}{\contentsline {subsubsection}{\numberline {F.2}User-based tests}{10}}
\bibdata{report}
\harvardcite{DcrawManpage}{Coffin}{Coffin}{2015}
\harvardcite{DcrawWebsite}{Coffin}{Coffin}{2017}
\harvardcite{DockerWhyItsUseful}{Kent}{Kent}{2014}
\harvardcite{WebSocketProtocol}{Melnikov \harvardand \ Fette}{Melnikov \harvardand \ Fette}{2011}
\harvardcite{XMLHttpRequestMozilla}{Mozilla}{Mozilla}{2017}
\harvardcite{ComparisonOfDatabaseBackends}{Tezer}{Tezer}{2014}
\harvardcite{AllAboutTheFormat}{Verhoeven}{Verhoeven}{2010}
\harvardcite{ColourAttenuationPriorAlg}{Zhu, Mai \harvardand \^^MShao}{Zhu et~al.}{2015}
\@writefile{toc}{\contentsline {section}{\numberline {III}References}{11}}
